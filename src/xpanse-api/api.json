{
    "openapi": "3.0.1",
    "info": {
        "title": "OpenAPI definition",
        "version": "v0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Generated server url"
        }
    ],
    "tags": [
        {
            "name": "Admin",
            "description": "APIs for administrating Xpanse"
        },
        {
            "name": "Services Available",
            "description": "APIs to query the available services."
        },
        {
            "name": "Credentials Management",
            "description": "APIs to manage credentials for authentication."
        },
        {
            "name": "Service",
            "description": "APIs to manage the service instances"
        },
        {
            "name": "Service Vendor",
            "description": "APIs to manage register services."
        },
        {
            "name": "Monitor",
            "description": "APIs to get metrics of deployed services."
        }
    ],
    "paths": {
        "/xpanse/services/register/{id}": {
            "get": {
                "tags": ["Service Vendor"],
                "description": "Get registered service using id.",
                "operationId": "detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of registered service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisteredServiceVo"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Service Vendor"],
                "description": "Update registered service using id and ocl model.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of registered service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/Ocl"
                            }
                        },
                        "application/yml": {
                            "schema": {
                                "$ref": "#/components/schemas/Ocl"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/Ocl"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisteredServiceVo"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Service Vendor"],
                "description": "Unregister registered service using id.",
                "operationId": "unregister",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of registered service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/register/file/{id}": {
            "put": {
                "tags": ["Service Vendor"],
                "description": "Update registered service using id and ocl file url.",
                "operationId": "fetchUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of registered service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "oclLocation",
                        "in": "query",
                        "description": "URL of Ocl file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisteredServiceVo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/service/{id}/credential": {
            "put": {
                "tags": ["Credentials Management"],
                "description": "Update credential for the service.",
                "operationId": "updateCredentialByServiceId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the deployed service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCredential"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Credentials Management"],
                "description": "Add credential for the service.",
                "operationId": "addCredentialByServiceId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the deployed service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCredential"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Credentials Management"],
                "description": "Delete credentials of the service.",
                "operationId": "deleteCredentialByServiceId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the deployed service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/csp/{cspName}/credential": {
            "put": {
                "tags": ["Credentials Management"],
                "description": "Update credential of the cloud service provider.",
                "operationId": "updateCredential",
                "parameters": [
                    {
                        "name": "cspName",
                        "in": "path",
                        "description": "The cloud service provider",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCredential"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Credentials Management"],
                "description": "Add credential of the cloud service provider.",
                "operationId": "addCredential",
                "parameters": [
                    {
                        "name": "cspName",
                        "in": "path",
                        "description": "The cloud service provider.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCredential"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Credentials Management"],
                "description": "Delete credential of the cloud service provider and the user.",
                "operationId": "deleteCredential",
                "parameters": [
                    {
                        "name": "cspName",
                        "in": "path",
                        "description": "The cloud service provider.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                        }
                    },
                    {
                        "name": "userName",
                        "in": "query",
                        "description": "The name of user who provided credential.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/register": {
            "get": {
                "tags": ["Service Vendor"],
                "description": "List registered service with query params.",
                "operationId": "listRegisteredServices",
                "parameters": [
                    {
                        "name": "categoryName",
                        "in": "query",
                        "description": "category of the service",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ai",
                                "compute",
                                "container",
                                "storage",
                                "network",
                                "database",
                                "mediaService",
                                "security",
                                "middleware",
                                "others"
                            ]
                        }
                    },
                    {
                        "name": "cspName",
                        "in": "query",
                        "description": "name of the service provider",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceName",
                        "in": "query",
                        "description": "name of the service",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceVersion",
                        "in": "query",
                        "description": "version of the service",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RegisteredServiceVo"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Service Vendor"],
                "description": "Register new service using ocl model.",
                "operationId": "register",
                "requestBody": {
                    "content": {
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/Ocl"
                            }
                        },
                        "application/yml": {
                            "schema": {
                                "$ref": "#/components/schemas/Ocl"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/Ocl"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisteredServiceVo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/register/file": {
            "post": {
                "tags": ["Service Vendor"],
                "description": "Register new service with URL of Ocl file.",
                "operationId": "fetch",
                "parameters": [
                    {
                        "name": "oclLocation",
                        "in": "query",
                        "description": "URL of Ocl file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisteredServiceVo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/deploy": {
            "post": {
                "tags": ["Service"],
                "description": "Start a task to deploy registered service.",
                "operationId": "deploy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/deployed": {
            "get": {
                "tags": ["Service"],
                "description": "Lists all deployed services.",
                "operationId": "listDeployedServices",
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServiceVo"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/deployed/{userName}": {
            "get": {
                "tags": ["Service"],
                "description": "List all deployed services by a user.",
                "operationId": "getDeployedServicesByUser",
                "parameters": [
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "User who deployed the service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServiceVo"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/deployed/{id}/details/{userName}": {
            "get": {
                "tags": ["Service"],
                "description": "Get deployed service details by id.",
                "operationId": "getDeployedServiceDetailsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id of deployed service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userName",
                        "in": "path",
                        "description": "User who deployed the service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceDetailVo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/categories": {
            "get": {
                "tags": ["Service Vendor"],
                "description": "Get category list.",
                "operationId": "listCategories",
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "ai",
                                            "compute",
                                            "container",
                                            "storage",
                                            "network",
                                            "database",
                                            "mediaService",
                                            "security",
                                            "middleware",
                                            "others"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/available": {
            "get": {
                "tags": ["Services Available"],
                "description": "List the available services.",
                "operationId": "listAvailableServices",
                "parameters": [
                    {
                        "name": "categoryName",
                        "in": "query",
                        "description": "category of the service",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ai",
                                "compute",
                                "container",
                                "storage",
                                "network",
                                "database",
                                "mediaService",
                                "security",
                                "middleware",
                                "others"
                            ]
                        }
                    },
                    {
                        "name": "cspName",
                        "in": "query",
                        "description": "name of the service provider",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceName",
                        "in": "query",
                        "description": "name of the service",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceVersion",
                        "in": "query",
                        "description": "version of the service",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAvailableServiceVo"
                                    }
                                }
                            },
                            "application/hal+json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserAvailableServiceVo"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/available/{id}": {
            "get": {
                "tags": ["Services Available"],
                "description": "Get available service by id.",
                "operationId": "availableServiceDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of available service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAvailableServiceVo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/available/{id}/openapi": {
            "get": {
                "tags": ["Services Available"],
                "description": "Get the API document of the available service.",
                "operationId": "openApi",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/available/category/{categoryName}": {
            "get": {
                "tags": ["Services Available"],
                "description": "Get the available services by tree.",
                "operationId": "getAvailableServicesTree",
                "parameters": [
                    {
                        "name": "categoryName",
                        "in": "path",
                        "description": "category of the service",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ai",
                                "compute",
                                "container",
                                "storage",
                                "network",
                                "database",
                                "mediaService",
                                "security",
                                "middleware",
                                "others"
                            ]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryOclVo"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/monitor/metric/{id}": {
            "get": {
                "tags": ["Monitor"],
                "description": "Get metrics of the deployed service.",
                "operationId": "getMetrics",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the deployed service",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "monitorResourceType",
                        "in": "query",
                        "description": "Types of the monitor resource",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["cpu", "mem"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Metric"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/health": {
            "get": {
                "tags": ["Admin"],
                "operationId": "health",
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemStatus"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/service/{id}/openapi/{type}": {
            "get": {
                "tags": ["Services Available"],
                "description": "Get the API document for adding credential of the Csp.",
                "operationId": "getCredentialOpenApiByServiceId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the deployed service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of credential.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/service/{id}/credentials": {
            "get": {
                "tags": ["Credentials Management"],
                "description": "List credentials of the service.",
                "operationId": "getCredentialDefinitionsByServiceId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the deployed service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of credential.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CredentialDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/service/{id}/credential/types": {
            "get": {
                "tags": ["Credentials Management"],
                "description": "List credential types provided by the cloud service provider.",
                "operationId": "getCredentialTypesByServiceId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the deployed service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/service/{id}/credential/capabilities": {
            "get": {
                "tags": ["Credentials Management"],
                "description": "List credential capabilities of the service.",
                "operationId": "getCredentialCapabilitiesByServiceId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the deployed service.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of credential.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AbstractCredentialInfo"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/csp/{cspName}/openapi/{type}": {
            "get": {
                "tags": ["Services Available"],
                "description": "Get the API document for adding credential of the Csp.",
                "operationId": "getCredentialOpenApi",
                "parameters": [
                    {
                        "name": "cspName",
                        "in": "path",
                        "description": "The cloud service provider.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of credential.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Link"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/csp/{cspName}/credentials": {
            "get": {
                "tags": ["Credentials Management"],
                "description": "List credentials of the cloud service provider and the user.",
                "operationId": "getCredentialDefinitionsByCsp",
                "parameters": [
                    {
                        "name": "cspName",
                        "in": "path",
                        "description": "The cloud service provider.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                        }
                    },
                    {
                        "name": "userName",
                        "in": "query",
                        "description": "The name of user who provided the credential.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of credential.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CredentialDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/csp/{cspName}/credential/types": {
            "get": {
                "tags": ["Credentials Management"],
                "description": "List credential types provided by the cloud service provider.",
                "operationId": "getCredentialTypesByCsp",
                "parameters": [
                    {
                        "name": "cspName",
                        "in": "path",
                        "description": "The cloud service provider.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/auth/csp/{cspName}/credential/capabilities": {
            "get": {
                "tags": ["Credentials Management"],
                "description": "List credential capabilities provided by the cloud service provider.",
                "operationId": "getCredentialCapabilitiesByCsp",
                "parameters": [
                    {
                        "name": "cspName",
                        "in": "path",
                        "description": "The cloud service provider.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The type of credential.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AbstractCredentialInfo"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/xpanse/services/destroy/{id}": {
            "delete": {
                "tags": ["Service"],
                "description": "Start a task to destroy the deployed service using id.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Response": {
                "required": ["details", "resultType", "success"],
                "type": "object",
                "properties": {
                    "resultType": {
                        "type": "string",
                        "description": "The result code of response.",
                        "enum": [
                            "Success",
                            "Runtime Failure",
                            "Parameters Invalid",
                            "Terraform Script Invalid",
                            "Unprocessable Entity",
                            "Response Not Valid"
                        ]
                    },
                    "details": {
                        "type": "array",
                        "description": "Details of the errors occurred",
                        "items": {
                            "type": "string",
                            "description": "Details of the errors occurred"
                        }
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Describes if the request is successful"
                    }
                }
            },
            "Billing": {
                "required": ["currency", "model", "period"],
                "type": "object",
                "properties": {
                    "model": {
                        "type": "string",
                        "description": "The business model of the managed service"
                    },
                    "period": {
                        "type": "string",
                        "description": "The rental period of the managed service",
                        "enum": ["daily", "weekly", "monthly", "quarterly", "yearly"]
                    },
                    "currency": {
                        "type": "string",
                        "description": "The billing currency of the managed service, valid values: euro,uso",
                        "enum": ["usd", "euro", "gbp", "cad", "dem", "frf", "cny"]
                    }
                },
                "description": "The billing policy of the managed service"
            },
            "CloudServiceProvider": {
                "required": ["name", "regions"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cloud Service Provider.",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "regions": {
                        "type": "array",
                        "description": "The regions of the Cloud Service Provider",
                        "items": {
                            "$ref": "#/components/schemas/Region"
                        }
                    }
                },
                "description": "The cloud service provider of the managed service"
            },
            "DeployVariable": {
                "required": ["dataType", "description", "kind", "mandatory", "name"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the deploy variable"
                    },
                    "kind": {
                        "$ref": "#/components/schemas/DeployVariableKind"
                    },
                    "dataType": {
                        "type": "string",
                        "description": "The type of the deploy variable",
                        "enum": ["string", "number", "boolean"]
                    },
                    "example": {
                        "type": "string",
                        "description": "The default value of the deploy variable"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the deploy variable"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the deploy variable. Value can be provided for default variables"
                    },
                    "mandatory": {
                        "type": "boolean",
                        "description": "Indicates if the variable is mandatory"
                    },
                    "validator": {
                        "type": "string",
                        "description": "Validator of the variable"
                    },
                    "sensitiveScope": {
                        "type": "string",
                        "description": "Sensitive scope of variable storage",
                        "enum": ["none", "once", "always"]
                    }
                },
                "description": "The variables for the deployment, which will be passed to the deployer"
            },
            "DeployVariableKind": {
                "type": "string",
                "description": "- `fix_env`: Values for variable of this type are defined by the managed service provider \nin the OCL template. Runtime will inject it to deployer as environment variables. \nThis variable is not visible to the end user.\n- `fix_variable`: Values for variable of this type are defined by the managed service \nprovider in the OCL template. Runtime will inject it to deployer as usual variables. \nThis variable is not visible to the end user.\n- `env`: Value for a variable of this type can be provided by end user. \nIf marked as mandatory then end user must provide value to this variable. \nIf marked as optional and if end user does not provide it, \nthen the fallback value to this variable is read by runtime (it can read from other sources,\n e.g., OS env variables). This variable is injected as an environment \n variable to the deployer.\n- `variable`: Value for a variable of this type can be provided by end user. \nIf marked as mandatory then end user must provide value to this variable. \nIf marked as optional and if end user does not provide it, \nthen the fallback value to this variable is read by runtime (it can read from other sources,\n e.g., OS env variables). This variable is injected as a regular variable to the deployer.\n- `env_env`: Value to this variable is read by runtime \n(it can read from other sources, e.g., OS env variables) \nand injected as an environment variable to the deployer. \nEnd user cannot see or change this variable.\n- `env_variable`: Value to this variable is read by runtime \n(it can read from other sources, e.g., OS env variables) \nand injected as a regular variable to the deployer. \nEnd user cannot see or change this variable.",
                "enum": ["fix_env", "fix_variable", "env", "variable", "env_env", "env_variable"]
            },
            "Deployment": {
                "required": ["deployer", "kind", "variables"],
                "type": "object",
                "properties": {
                    "kind": {
                        "type": "string",
                        "description": "The type of the Deployer which will handle the service deployment",
                        "enum": ["terraform"]
                    },
                    "variables": {
                        "type": "array",
                        "description": "The variables for the deployment, which will be passed to the deployer",
                        "items": {
                            "$ref": "#/components/schemas/DeployVariable"
                        }
                    },
                    "deployer": {
                        "type": "string",
                        "description": "The real deployer, something like terraform scripts..."
                    }
                },
                "description": "The deployment of the managed service"
            },
            "Flavor": {
                "required": ["fixedPrice", "name", "properties"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The flavor name"
                    },
                    "fixedPrice": {
                        "type": "integer",
                        "description": "The price of the flavor",
                        "format": "int32"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The properties of the flavor"
                        },
                        "description": "The properties of the flavor"
                    }
                },
                "description": "The flavors of the managed service"
            },
            "Ocl": {
                "required": [
                    "billing",
                    "category",
                    "cloudServiceProvider",
                    "deployment",
                    "description",
                    "flavors",
                    "icon",
                    "name",
                    "namespace",
                    "serviceVersion",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "The catalog of the service",
                        "enum": [
                            "ai",
                            "compute",
                            "container",
                            "storage",
                            "network",
                            "database",
                            "mediaService",
                            "security",
                            "middleware",
                            "others"
                        ]
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the Ocl"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the managed service"
                    },
                    "serviceVersion": {
                        "type": "string",
                        "description": "The version of the managed service"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the managed service"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the managed service"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the managed service"
                    },
                    "cloudServiceProvider": {
                        "$ref": "#/components/schemas/CloudServiceProvider"
                    },
                    "deployment": {
                        "$ref": "#/components/schemas/Deployment"
                    },
                    "flavors": {
                        "type": "array",
                        "description": "The flavors of the managed service",
                        "items": {
                            "$ref": "#/components/schemas/Flavor"
                        }
                    },
                    "billing": {
                        "$ref": "#/components/schemas/Billing"
                    }
                }
            },
            "Region": {
                "required": ["area", "name"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Region"
                    },
                    "area": {
                        "type": "string",
                        "description": "The area which the region belongs to, such as Asia, Europe, Africa"
                    }
                },
                "description": "The regions of the Cloud Service Provider"
            },
            "Link": {
                "type": "object",
                "properties": {
                    "rel": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string"
                    },
                    "hreflang": {
                        "type": "string"
                    },
                    "media": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "deprecation": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "RegisteredServiceVo": {
                "required": [
                    "category",
                    "createTime",
                    "csp",
                    "id",
                    "lastModifiedTime",
                    "name",
                    "ocl",
                    "serviceState",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the registered service.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the registered service."
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the registered service."
                    },
                    "csp": {
                        "type": "string",
                        "description": "Csp of the registered service.",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of the registered service.",
                        "enum": [
                            "ai",
                            "compute",
                            "container",
                            "storage",
                            "network",
                            "database",
                            "mediaService",
                            "security",
                            "middleware",
                            "others"
                        ]
                    },
                    "ocl": {
                        "$ref": "#/components/schemas/Ocl"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "createTime of the registered service.",
                        "format": "date-time"
                    },
                    "lastModifiedTime": {
                        "type": "string",
                        "description": "Last updateTime of the registered service.",
                        "format": "date-time"
                    },
                    "serviceState": {
                        "type": "string",
                        "description": "State of service.",
                        "enum": [
                            "REGISTERED",
                            "UPDATED",
                            "DEPLOYING",
                            "DEPLOY_SUCCESS",
                            "DEPLOY_FAILED",
                            "DESTROYING",
                            "DESTROY_SUCCESS",
                            "DESTROY_FAILED"
                        ]
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    }
                }
            },
            "CreateCredential": {
                "required": ["csp", "name", "timeToLive", "type", "userName", "variables"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the credential"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User who create the credential."
                    },
                    "csp": {
                        "type": "string",
                        "description": "The cloud service provider of the credential.",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the credential"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the credential",
                        "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                    },
                    "variables": {
                        "type": "array",
                        "description": "The variables list of the credential",
                        "items": {
                            "$ref": "#/components/schemas/CredentialVariable"
                        }
                    },
                    "timeToLive": {
                        "type": "integer",
                        "description": "The time in seconds to live of the credential",
                        "format": "int32",
                        "default": 3600
                    }
                }
            },
            "CredentialVariable": {
                "required": ["description", "name", "value"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the CredentialVariable,this field is provided by the the plugin of cloud service provider."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the CredentialVariable,this field is provided by the plugin of cloud service provider."
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the CredentialVariable, this field is filled by the user."
                    }
                },
                "description": "The variables list of the credential"
            },
            "CreateRequest": {
                "required": ["category", "csp", "flavor", "region", "serviceName", "userName", "version"],
                "type": "object",
                "properties": {
                    "userName": {
                        "type": "string",
                        "description": "User who ordered the service"
                    },
                    "category": {
                        "type": "string",
                        "description": "The category of the service",
                        "enum": [
                            "ai",
                            "compute",
                            "container",
                            "storage",
                            "network",
                            "database",
                            "mediaService",
                            "security",
                            "middleware",
                            "others"
                        ]
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The name of the service ordered."
                    },
                    "customerServiceName": {
                        "type": "string",
                        "description": "Customer's name for the service. Used only for customer's reference.If not provided, this value will be auto-generated"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of service"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region of the provider."
                    },
                    "csp": {
                        "type": "string",
                        "description": "The csp of the Service.",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "flavor": {
                        "type": "string",
                        "description": "The flavor of the Service."
                    },
                    "serviceRequestProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The properties for the requested service"
                        },
                        "description": "The properties for the requested service"
                    }
                }
            },
            "ServiceVo": {
                "required": [
                    "category",
                    "createTime",
                    "csp",
                    "id",
                    "lastModifiedTime",
                    "name",
                    "serviceState",
                    "userName",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the service",
                        "format": "uuid"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User who ordered the service"
                    },
                    "category": {
                        "type": "string",
                        "description": "The catalog of the service",
                        "enum": [
                            "ai",
                            "compute",
                            "container",
                            "storage",
                            "network",
                            "database",
                            "mediaService",
                            "security",
                            "middleware",
                            "others"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service"
                    },
                    "customerServiceName": {
                        "type": "string",
                        "description": "Customer's name for the service. Used only for customer's reference.If not provided, this value will be auto-generated"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the service"
                    },
                    "csp": {
                        "type": "string",
                        "description": "The provider of the service",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "flavor": {
                        "type": "string",
                        "description": "The flavor of the service"
                    },
                    "serviceState": {
                        "type": "string",
                        "description": "The state of the service",
                        "enum": [
                            "REGISTERED",
                            "UPDATED",
                            "DEPLOYING",
                            "DEPLOY_SUCCESS",
                            "DEPLOY_FAILED",
                            "DESTROYING",
                            "DESTROY_SUCCESS",
                            "DESTROY_FAILED"
                        ]
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of register service.",
                        "format": "date-time"
                    },
                    "lastModifiedTime": {
                        "type": "string",
                        "description": "Time of update service.",
                        "format": "date-time"
                    }
                }
            },
            "DeployResource": {
                "required": ["kind", "name", "properties", "resourceId"],
                "type": "object",
                "properties": {
                    "resourceId": {
                        "type": "string",
                        "description": "The id of the deployed resource."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the deployed resource."
                    },
                    "kind": {
                        "type": "string",
                        "description": "The kind of the deployed resource.",
                        "enum": ["vm", "container", "publicIP", "vpc", "volume", "unknown"]
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The properties of the deployed resource."
                        },
                        "description": "The properties of the deployed resource."
                    }
                },
                "description": "The resource list of the deployed service."
            },
            "ServiceDetailVo": {
                "required": [
                    "category",
                    "createRequest",
                    "createTime",
                    "csp",
                    "id",
                    "lastModifiedTime",
                    "name",
                    "serviceState",
                    "userName",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the service",
                        "format": "uuid"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User who ordered the service"
                    },
                    "category": {
                        "type": "string",
                        "description": "The catalog of the service",
                        "enum": [
                            "ai",
                            "compute",
                            "container",
                            "storage",
                            "network",
                            "database",
                            "mediaService",
                            "security",
                            "middleware",
                            "others"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service"
                    },
                    "customerServiceName": {
                        "type": "string",
                        "description": "Customer's name for the service. Used only for customer's reference.If not provided, this value will be auto-generated"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the service"
                    },
                    "csp": {
                        "type": "string",
                        "description": "The provider of the service",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "flavor": {
                        "type": "string",
                        "description": "The flavor of the service"
                    },
                    "serviceState": {
                        "type": "string",
                        "description": "The state of the service",
                        "enum": [
                            "REGISTERED",
                            "UPDATED",
                            "DEPLOYING",
                            "DEPLOY_SUCCESS",
                            "DEPLOY_FAILED",
                            "DESTROYING",
                            "DESTROY_SUCCESS",
                            "DESTROY_FAILED"
                        ]
                    },
                    "createTime": {
                        "type": "string",
                        "description": "Time of register service.",
                        "format": "date-time"
                    },
                    "lastModifiedTime": {
                        "type": "string",
                        "description": "Time of update service.",
                        "format": "date-time"
                    },
                    "createRequest": {
                        "$ref": "#/components/schemas/CreateRequest"
                    },
                    "deployResources": {
                        "type": "array",
                        "description": "The resource list of the deployed service.",
                        "items": {
                            "$ref": "#/components/schemas/DeployResource"
                        }
                    },
                    "deployedServiceProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The properties of the deployed service."
                        },
                        "description": "The properties of the deployed service."
                    }
                }
            },
            "UserAvailableServiceVo": {
                "required": [
                    "billing",
                    "category",
                    "createTime",
                    "csp",
                    "description",
                    "flavors",
                    "icon",
                    "id",
                    "lastModifiedTime",
                    "name",
                    "namespace",
                    "regions",
                    "serviceState",
                    "variables",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the available service.",
                        "format": "uuid"
                    },
                    "category": {
                        "type": "string",
                        "description": "The catalog of the available service.",
                        "enum": [
                            "ai",
                            "compute",
                            "container",
                            "storage",
                            "network",
                            "database",
                            "mediaService",
                            "security",
                            "middleware",
                            "others"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the available service."
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the available service."
                    },
                    "csp": {
                        "type": "string",
                        "description": "The Cloud Service Provider of the available service.",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "regions": {
                        "type": "array",
                        "description": "The regions of the Cloud Service Provider.",
                        "items": {
                            "$ref": "#/components/schemas/Region"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the available service."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the available service."
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the available service."
                    },
                    "variables": {
                        "type": "array",
                        "description": "The variables for the deployment, which will be passed to the deployer.",
                        "items": {
                            "$ref": "#/components/schemas/DeployVariable"
                        }
                    },
                    "flavors": {
                        "type": "array",
                        "description": "The flavors of the available service.",
                        "items": {
                            "$ref": "#/components/schemas/Flavor"
                        }
                    },
                    "billing": {
                        "$ref": "#/components/schemas/Billing"
                    },
                    "createTime": {
                        "type": "string",
                        "description": "The registration time of the service.",
                        "format": "date-time"
                    },
                    "lastModifiedTime": {
                        "type": "string",
                        "description": "The latest update time of the available service.",
                        "format": "date-time"
                    },
                    "serviceState": {
                        "type": "string",
                        "description": "The state of the available service.",
                        "enum": [
                            "REGISTERED",
                            "UPDATED",
                            "DEPLOYING",
                            "DEPLOY_SUCCESS",
                            "DEPLOY_FAILED",
                            "DESTROYING",
                            "DESTROY_SUCCESS",
                            "DESTROY_FAILED"
                        ]
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    }
                }
            },
            "CategoryOclVo": {
                "required": ["name", "versions"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the registered service."
                    },
                    "versions": {
                        "type": "array",
                        "description": "List of the registered service group by service version.",
                        "items": {
                            "$ref": "#/components/schemas/VersionOclVo"
                        }
                    }
                }
            },
            "ProviderOclVo": {
                "required": ["details", "name", "regions"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The Cloud Service Provider.",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "regions": {
                        "type": "array",
                        "description": "The regions of the Cloud Service Provider.",
                        "items": {
                            "$ref": "#/components/schemas/Region"
                        }
                    },
                    "details": {
                        "type": "array",
                        "description": "The list of the available services.",
                        "items": {
                            "$ref": "#/components/schemas/UserAvailableServiceVo"
                        }
                    }
                },
                "description": "List of the registered services group by service version."
            },
            "VersionOclVo": {
                "required": ["cloudProvider", "version"],
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "Version of the registered service."
                    },
                    "cloudProvider": {
                        "type": "array",
                        "description": "List of the registered services group by service version.",
                        "items": {
                            "$ref": "#/components/schemas/ProviderOclVo"
                        }
                    }
                },
                "description": "List of the registered service group by service version."
            },
            "Metric": {
                "required": ["name", "type", "unit"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the metric."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the metric."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the metric.",
                        "enum": ["counter", "gauge", "histogram", "summary"]
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of the metric.",
                        "enum": ["mb", "kb", "percentage"]
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The labels of the metric."
                        },
                        "description": "The labels of the metric."
                    },
                    "metrics": {
                        "type": "array",
                        "description": "The list of the metric items.",
                        "items": {
                            "$ref": "#/components/schemas/MetricItem"
                        }
                    }
                }
            },
            "MetricItem": {
                "type": "object",
                "properties": {
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "enum": ["value", "count", "sum"]
                    },
                    "value": {
                        "type": "number"
                    }
                },
                "description": "The list of the metric items."
            },
            "SystemStatus": {
                "required": ["healthStatus"],
                "type": "object",
                "properties": {
                    "healthStatus": {
                        "type": "string",
                        "enum": ["OK", "NOK"]
                    }
                }
            },
            "CredentialDefinition": {
                "required": ["csp", "description", "name", "type", "userName", "variables"],
                "type": "object",
                "properties": {
                    "csp": {
                        "type": "string",
                        "description": "The cloud service provider of the credential.",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "userName": {
                        "type": "string",
                        "description": "The userId of the credential.",
                        "default": "default"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the credential,this field is provided by  he the plugin of cloud service provider."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the credential,this field is provided by  he the plugin of cloud service provider."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the credential,this field is provided by  he the plugin of cloud service provider.",
                        "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                    },
                    "variables": {
                        "type": "array",
                        "description": "The variables list of the credential.",
                        "items": {
                            "$ref": "#/components/schemas/CredentialVariable"
                        }
                    }
                }
            },
            "AbstractCredentialInfo": {
                "required": ["csp", "description", "name", "type", "userName"],
                "type": "object",
                "properties": {
                    "csp": {
                        "type": "string",
                        "description": "The cloud service provider of the credential.",
                        "enum": ["aws", "azure", "alicloud", "huawei", "openstack", "flexibleEngine"]
                    },
                    "userName": {
                        "type": "string",
                        "description": "The userId of the credential.",
                        "default": "default"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the credential,this field is provided by  he the plugin of cloud service provider."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the credential,this field is provided by  he the plugin of cloud service provider."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the credential,this field is provided by  he the plugin of cloud service provider.",
                        "enum": ["variables", "http_authentication", "api_key", "oauth2"]
                    }
                }
            }
        }
    }
}
